{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["module","exports","ContactListItem","name","number","onRemove","className","styles","ContactListText","type","ContactListButton","onClick","ContactList","contacts","onRemoveContact","map","id","key","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","onSubmit","ContactFormLabel","ContactFormInput","onChange","ContactFormButton","Component","Filter","onChangeFilter","App","filter","addContact","el","contact","uuidv4","length","alert","prevState","removeContact","contactId","changeFilter","getVisibleContacts","toLowerCase","includes","savedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4c9ad741.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__38_A0\",\"ContactFormLabel\":\"ContactForm_ContactFormLabel__2dU16\",\"ContactFormInput\":\"ContactForm_ContactFormInput__326c-\",\"ContactFormButton\":\"ContactForm_ContactFormButton__vNvCY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactListItem\":\"ContactListItem_ContactListItem__35-LF\",\"ContactListText\":\"ContactListItem_ContactListText__3duBJ\",\"ContactListButton\":\"ContactListItem_ContactListButton__1Ai0l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__1Weln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactFormInput\":\"Filter_ContactFormInput__3TOqI\"};","import React from \"react\";\r\nimport styles from \"./ContactListItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactListItem = ({ name, number, onRemove }) => (\r\n  <li className={styles.ContactListItem}>\r\n    <p className={styles.ContactListText}>\r\n      {name}:<br />\r\n      {number}\r\n    </p>\r\n\r\n    <button\r\n      type=\"button\"\r\n      className={styles.ContactListButton}\r\n      onClick={onRemove}\r\n    >\r\n      Удалить\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul className={styles.ContactList}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactListItem\r\n        key={id}\r\n        name={name}\r\n        number={number}\r\n        onRemove={() => onRemoveContact(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }).isRequired\r\n  ),\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact(this.state);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.ContactForm} onSubmit={this.handleSubmit}>\r\n        <h2>Phonebook</h2>\r\n        <label className={styles.ContactFormLabel}>\r\n          Name\r\n          <input\r\n            className={styles.ContactFormInput}\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            name=\"name\"\r\n          />\r\n        </label>\r\n        <label className={styles.ContactFormLabel}>\r\n          Phone\r\n          <input\r\n            className={styles.ContactFormInput}\r\n            type=\"text\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            name=\"number\"\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={styles.ContactFormButton}>\r\n          Добавить контакт\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      <h2>Find contacts by name</h2>\r\n      <input\r\n        type=\"text\"\r\n        className={styles.ContactFormInput}\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport Filter from \"./Filter/Filter\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const savedContacts = localStorage.getItem(\"contacts\");\r\n\r\n    if (savedContacts) {\r\n      this.setState({\r\n        contacts: JSON.parse(savedContacts),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addContact = (el) => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: el.name,\r\n      number: el.number,\r\n    };\r\n\r\n    this.state.contacts.filter((e) => e.name === contact.name).length > 0\r\n      ? alert(`${contact.name} is already in contacts`)\r\n      : this.setState((prevState) => {\r\n          return {\r\n            contacts: [...prevState.contacts, contact],\r\n          };\r\n        });\r\n  };\r\n\r\n  removeContact = (contactId) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  };\r\n\r\n  changeFilter = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <>\r\n        <ContactForm onAddContact={this.addContact} />\r\n        {contacts.length > 1 && (\r\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n        )}\r\n        {visibleContacts.length > 0 && (\r\n          <ContactList\r\n            contacts={visibleContacts}\r\n            onRemoveContact={this.removeContact}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}